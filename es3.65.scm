; library
(define (euler-transform s)
  (let ((s0 (stream-ref s 0))
        (s1 (stream-ref s 1))
        (s2 (stream-ref s 2)))
        (cons-stream (- s2 (/ (square (- s2 s1))
        (+ s0 (* -2 s1) s2)))
        (euler-transform (stream-cdr s)))))
(define (make-tableau transform s)
  (cons-stream s
               (make-tableau transform
                             (transform s))))
(define (accelerated-sequence transform s)
  (stream-map stream-car(make-tableau transform s)))
(define (display-line text)
  (display text)
  (newline))
(define (display-stream s number-of-elements)
  (if (> number-of-elements 0)
      (begin (display-line (stream-car s))
             (display-stream (stream-cdr s) (- number-of-elements 1)))))
(define (scale-stream s n)
  (cons-stream (* (stream-car s)
                  n)
               (scale-stream (stream-cdr s)
                             n)))
(define (add-streams s1 s2)
  (cons-stream (+ (stream-car s1)
                  (stream-car s2))
               (add-streams (stream-cdr s1)
                            (stream-cdr s2))))
(define (repeat number)
  (cons-stream number (repeat number)))
(define (partial-sums stream)
  (cons-stream (stream-car stream)
               (add-streams (repeat (stream-car stream))
                            (partial-sums (stream-cdr stream)))))
; exercise
(define (ln-summands n)
  (cons-stream (/ 1.0 n)
               (stream-map - (ln-summands (+ n 1)))))
(define ln-stream
  (partial-sums (ln-summands 1)))
(define (stream-limit stream tolerance)
  (define (iterate stream iterations)
    (let ((former (stream-car stream))
          (latter (stream-car (stream-cdr stream))))
      (let ((absolute-difference
             (abs (- former latter))))
        (if (< absolute-difference tolerance)
            (list latter iterations)
            (iterate (stream-cdr stream)
                     (+ 1 iterations))))))
  (iterate stream 0))
(define tolerance 0.001)
(display-line "basic sequence")
(display-line (stream-limit ln-stream tolerance))
(display-line "euler-transformed sequence")
(display-line (stream-limit (euler-transform ln-stream) tolerance))
(display-line "accelerated sequence")
(display-line (stream-limit (accelerated-sequence euler-transform ln-stream) tolerance))
